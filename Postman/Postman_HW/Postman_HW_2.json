{
	"info": {
		"_postman_id": "f2309970-6fa0-433a-b049-b9d98abae7e6",
		"name": "Postman_HW",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23830228"
	},
	"item": [
		{
			"name": "UserNameAge",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip}}{{port}}/get_method?name={{name }}&age={{age}}",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name }}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "First",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip}}{{port}}/first",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "ObjectInfo",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip}}{{port}}/object_info_1?name={{name }}&age={{age}}&weight=64",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name }}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "weight",
							"value": "64"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ObjectInfo-2",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip}}{{port}}/object_info_2?name={{name }}&age={{age}}&salary={{salary}}",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name }}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ObjectInfo-3",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip}}{{port}}/object_info_3?name={{name }}&age={{age}}&salary={{salary}}",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name }}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ObjectInfo-3 HW2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseFormData = pm.response.json();\r",
							"let requestFormData = request.data;\r",
							"\r",
							"\r",
							"let name = pm.request.url.query.get(\"name\");\r",
							"let age = pm.request.url.query.get(\"age\");\r",
							"let salary = pm.request.url.query.get(\"salary\");\r",
							"\r",
							"// console.log(name)\r",
							"// console.log(age)\r",
							"// console.log(salary)\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request):\r",
							"pm.test(\"Check the name\", function () {\r",
							"        pm.expect(responseFormData.name).to.eql(name);\r",
							"});\r",
							"\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request):\r",
							"pm.test(\"Check the age\", function () {\r",
							"        pm.expect(responseFormData.age).to.eql(age);\r",
							"});\r",
							"\r",
							"//Проверить, что salary в ответе равноsalary s request (salary забрать из request):\r",
							"pm.test(\"Check the salary\", function () {\r",
							"        pm.expect(responseFormData.salary).to.eql(+salary);\r",
							"});\r",
							"\r",
							"//Вывести в консоль параметр family из response\r",
							"console.log(responseFormData.family);\r",
							"\r",
							"\r",
							"// Проверить, что у параметра dog есть параметры name\r",
							"pm.test(\"Check the dog property\", function () {\r",
							"        pm.expect(responseFormData.family.pets.dog).have.property('name');\r",
							"});\r",
							"\r",
							"// Проверить, что у параметра dog есть параметры age\r",
							"pm.test(\"Check the dog property\", function () {\r",
							"        pm.expect(responseFormData.family.pets.dog).have.property('age');\r",
							"});\r",
							"\r",
							"let pets = responseFormData.family.pets;\r",
							"// console.log(pets)\r",
							"\r",
							"let pet_dog_name = pets.dog.name;\r",
							"let pet_dog_age = pets.dog.age;\r",
							"// console.log(pet_dog_name)\r",
							"// Проверить, что параметр name имеет значение Luky\r",
							"pm.test(\"Check the dog property\", function () {\r",
							"        pm.expect(pet_dog_age).to.eql(4);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр age имеет значение 4\r",
							"pm.test(\"Check the dog property\", function () {\r",
							"        pm.expect(pet_dog_name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip}}{{port}}/object_info_3?name={{name }}&age={{age}}&salary={{salary}}",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name }}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ObjectInfo-4",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip}}{{port}}/object_info_4?name={{name }}&age={{age}}&salary={{salary}}",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name }}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ObjectInfo-4 HW2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseFormData = pm.response.json();\r",
							"let requestFormData = request.data;\r",
							"\r",
							"let name = pm.request.url.query.get(\"name\");\r",
							"let age = pm.request.url.query.get(\"age\");\r",
							"let salary = pm.request.url.query.get(\"salary\");\r",
							"\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name забрать из request):\r",
							"pm.test(\"Check the name\", function () {\r",
							"        pm.expect(responseFormData.name).to.eql(name);\r",
							"});\r",
							"\r",
							"//Проверить, что age в ответе равно age s request (age забрать из request):\r",
							"pm.test(\"Check the age\", function () {\r",
							"        pm.expect(responseFormData.age).to.eql(+age);\r",
							"});\r",
							"\r",
							"console.log(salary);\r",
							"console.log(responseFormData.salary);\r",
							"console.log(responseFormData.salary[0]);\r",
							"console.log(responseFormData.salary[1]);\r",
							"console.log(responseFormData.salary[2]);\r",
							"\r",
							"pm.test(\"Check the salary\", function () {\r",
							"        pm.expect(responseFormData.salary[0]).to.eql(+salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Check the salary\", function () {\r",
							"        pm.expect(+responseFormData.salary[1]).to.eql(salary*2);\r",
							"});\r",
							"\r",
							"pm.test(\"Check the salary\", function () {\r",
							"        pm.expect(+responseFormData.salary[2]).to.eql(salary*3);\r",
							"});\r",
							"\r",
							"\r",
							"for (let i = 0; i < responseFormData.salary.length; i += 1) {\r",
							"  console.log(responseFormData.salary[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ip}}{{port}}/object_info_4?name={{name }}&age={{age}}&salary={{salary}}",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name }}"
						},
						{
							"key": "age",
							"value": "{{age}}"
						},
						{
							"key": "salary",
							"value": "{{salary}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "UserInfo",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name }}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip}}{{port}}/user_info_3",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "UserInfo-3 HW2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let requestFormData = request.data;\r",
							"\r",
							"//спарсить response body в JSON:\r",
							"let responseFormData = pm.response.json();\r",
							"\r",
							"let requestAge = requestFormData.age;\r",
							"let responseAge = responseFormData.age;\r",
							"\r",
							"//Проверить, что name в ответе равно name s request (name вбить руками):\r",
							"pm.test(\"Check the name\", function () {\r",
							"        pm.expect(responseFormData.name).to.eql('Anastasia');\r",
							"});\r",
							"\r",
							"//Проверить, что age в ответе равно age s request (age вбить руками):\r",
							"pm.test(\"Check the age\", function () {\r",
							"        pm.expect(+responseAge).to.eql(36);\r",
							"});\r",
							"\r",
							"//Проверить, что salary в ответе равно salary s request (salary вбить руками):\r",
							"pm.test(\"Check the salary\", function () {\r",
							"        pm.expect(responseFormData.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"pm.test(\"Check the name\", function () {\r",
							"        pm.expect(responseFormData.name).to.eql(requestFormData.name);\r",
							"});\r",
							"pm.test(\"Check the age\", function () {\r",
							"        pm.expect(responseFormData.age).to.eql(requestFormData.age);\r",
							"});\r",
							"pm.test(\"Check the salary\", function () {\r",
							"        pm.expect(responseFormData.salary).to.eql(+requestFormData.salary);\r",
							"});\r",
							"//Вывести в консоль параметр family из response\r",
							"console.log(responseFormData.family);\r",
							"\r",
							"// Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Check the salary_1_5_year равно salary*4\", function () {\r",
							"        pm.expect(responseFormData.family.u_salary_1_5_year).to.eql(+requestFormData.salary*4);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name }}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip}}{{port}}/user_info_3",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "UserInfo-2",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name }}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip}}{{port}}/user_info_2",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		},
		{
			"name": "UserInfo-2 HW2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//спарсить request:\r",
							"let requestFormData = request.data;\r",
							"\r",
							"//спарсить response body в JSON:\r",
							"let responseFormData = pm.response.json();\r",
							"console.log(responseFormData)\r",
							"\r",
							"\r",
							"pm.test(\"Check the start_qa_salary parametr\", function () {\r",
							"        pm.expect(responseFormData.hasOwnProperty(\"start_qa_salary\")).to.eql(true)\r",
							"});\r",
							"\r",
							"pm.test(\"Check the qa_salary_after_6_months parametr\", function () {\r",
							"        pm.expect(responseFormData.hasOwnProperty(\"qa_salary_after_6_months\")).to.eql(true)\r",
							"});\r",
							"\r",
							"pm.test(\"Check the qa_salary_after_12_months parametr\", function () {\r",
							"        pm.expect(responseFormData.hasOwnProperty(\"qa_salary_after_12_months\")).to.eql(true)\r",
							"});\r",
							"\r",
							"pm.test(\"Check the qa_salary_after_1.5_year parametr\", function () {\r",
							"        pm.expect(responseFormData.hasOwnProperty(\"qa_salary_after_1.5_year\")).to.eql(true)\r",
							"});\r",
							"\r",
							"pm.test(\"Check the qa_salary_after_3.5_years parametr\", function () {\r",
							"        pm.expect(responseFormData.hasOwnProperty(\"qa_salary_after_3.5_years\")).to.eql(true)\r",
							"});\r",
							"\r",
							"pm.test(\"Check the person parametr\", function () {\r",
							"        pm.expect(responseFormData.hasOwnProperty(\"person\")).to.eql(true)\r",
							"});\r",
							"\r",
							"pm.test(\"Check the start_qa_salary\", function () {\r",
							"        pm.expect(responseFormData.start_qa_salary).to.eql(+requestFormData.salary);\r",
							"});\r",
							"\r",
							"// Проверить,что qa_salary_after_6_months равен salary*2 из request \r",
							"pm.test(\"Check the qa_salary_after_6_months*2\", function () {\r",
							"        pm.expect(responseFormData.qa_salary_after_6_months).to.eql(+requestFormData.salary*2);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"Check the qa_salary_after_12_months равен salary*2.7\", function () {\r",
							"        pm.expect(responseFormData.qa_salary_after_12_months).to.eql(+requestFormData.salary*2.7);\r",
							"});\r",
							"\r",
							"let salary_ = Object.values(responseFormData)\r",
							"// console.log(salary_[1])\r",
							"\r",
							"// Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request \r",
							"pm.test(\"Check the qa_salary_after_1.5_year  равен salary*3.3\", function () {\r",
							"        pm.expect(+salary_[1]).to.eql(+requestFormData.salary*3.3);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"pm.test(\"Check the qa_salary_after_3.5_year  равен salary*3.8\", function () {\r",
							"        pm.expect(+salary_[3]).to.eql(+requestFormData.salary*3.8);\r",
							"});\r",
							"\r",
							"// Проверить, что параметр в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"\r",
							"pm.test(\"Check the 1-й элемент из u_name равен salary из request\", function () {\r",
							"        pm.expect(responseFormData.person.u_name[1]).to.eql(+requestFormData.salary);\r",
							"});\r",
							"\r",
							"// Проверить, что u_age равен age из request (age забрать из request.)\r",
							"pm.test(\"Check the u_age равен age из request \", function () {\r",
							"        pm.expect(responseFormData.person.u_age).to.eql(+requestFormData.age);\r",
							"});\r",
							"\r",
							"// Проверить, что u_salary_5_years равен salary*4.2 из request  (salary забрать из request.)\r",
							"pm.test(\"Check the u_salary_5_years равен salary*4.2 из request  \", function () {\r",
							"        pm.expect(responseFormData.person.u_salary_5_years).to.eql(+requestFormData.salary*4.2);\r",
							"});\r",
							"\r",
							"\r",
							"let person = responseFormData.person;\r",
							"for (let i = 0; i < person.length; i ++) {\r",
							"  console.log(person[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name }}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{ip}}{{port}}/user_info_2",
					"host": [
						"{{ip}}{{port}}"
					],
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ip",
			"value": "http://162.55.220.72",
			"type": "string"
		},
		{
			"key": "port",
			"value": ":5005",
			"type": "string"
		},
		{
			"key": "name ",
			"value": "Anastasia",
			"type": "string"
		},
		{
			"key": "age",
			"value": "36",
			"type": "string"
		},
		{
			"key": "salary",
			"value": "1000",
			"type": "string"
		},
		{
			"key": "qa_salary_after_1.5_year",
			"value": ""
		}
	]
}